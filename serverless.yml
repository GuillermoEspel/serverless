# For full config options, check the docs:
#    docs.serverless.com
#
service: hola-mundo
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-2
  stage: dev
  memorySize: 128 # in MB, default is 1024
  timeout: 10 # in seconds, default is 6
  versionFunctions: false # default is true
  environment:
    REGION: ${self:provider.region}
    TASK_TABLE: "TaskTable"
    BUCKET_NAME: "bucket-example-1d81aa02-933f"
    DYNAMODB: { Ref: TaskTable }
    USER_POOL_ID: { Ref: CognitoUserPool }
    CLIENT_ID: { Ref: CognitoUserPoolClient }
    APIGATEWAY: { Ref: ApiGatewayAuthorizer }
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: { Fn::GetAtt: [TaskTable, Arn] }
    - Effect: Allow
      Action:
        - cognito-idp:AdminInitiateAuth
        - cognito-idp:AdminCreateUser
        - cognito-idp:AdminSetUserPassword
      Resource: { Fn::GetAtt: [CognitoUserPool, Arn] }
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"
    - Effect: Allow
      Action:
        - rekognition:DetectText
      Resource: "*"

functions:
  status: ${file(sls_functions/status.yml):status}
  getTasks: ${file(sls_functions/tasks.yml):getTasks}
  getTask: ${file(sls_functions/tasks.yml):getTask}
  createTask: ${file(sls_functions/tasks.yml):createTask}
  updateTask: ${file(sls_functions/tasks.yml):updateTask}
  deleteTask: ${file(sls_functions/tasks.yml):deleteTask}
  signupUser: ${file(sls_functions/cognito.yml):signupUser}
  loginUser: ${file(sls_functions/cognito.yml):loginUser}
  privateAPI: ${file(sls_functions/cognito.yml):privateAPI}
  uploadFile:
    handler: ${self:custom.folderEndpoints}/uploadFile.handler
    events:
      - http:
          path: files
          method: post
          cors: true
  getTextFromImageBase64: ${file(sls_functions/rekognition.yml):getTextFromImageBase64}

resources:
  Resources:
    TaskTable: ${file(sls_resources/dynamodb_tables.yml):TaskTable}
    CognitoUserPool: ${file(sls_resources/cognito.yml):CognitoUserPool}
    CognitoUserPoolClient: ${file(sls_resources/cognito.yml):CognitoUserPoolClient}
    ApiGatewayAuthorizer: ${file(sls_resources/cognito.yml):ApiGatewayAuthorizer}
    BucketUpload: ${file(sls_resources/s3.yml):BucketUpload}

plugins:
  - serverless-webpack
  - serverless-export-env
  - serverless-dynamodb-local
  - serverless-offline

package:
  individually: true

custom:
  webpack:
    webpackConfig: "webpack.config.js"
    includeModules: false
    packager: "npm"
    excludeFiles: src/**/*.test.js
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      migrate: true
      inMemory: true
    migration:
      dir: offline/migrations
  folderEndpoints: "src/endpoints"
